/*
auto-generated by: https://github.com/react-spring/gltfjsx
*/
import * as THREE from 'three';
import React from 'react';
import { useLoader } from 'react-three-fiber';
import { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';
import { draco } from 'drei';


const Chair = ({ legColor, legTexture, cushionColor, cushionTexture }) => {
  const { nodes, materials } = useLoader(GLTFLoader, 'bb3.glb', draco('draco-gltf/'));
  const ctexture = useLoader(THREE.TextureLoader, `textures/${cushionTexture}`);
  ctexture.wrapS = THREE.RepeatWrapping;
  ctexture.wrapT = THREE.RepeatWrapping;
  ctexture.flipY = false;

  const ltexture = useLoader(THREE.TextureLoader, `textures/${legTexture}`);
  ltexture.wrapS = THREE.RepeatWrapping;
  ltexture.wrapT = THREE.RepeatWrapping;
  ltexture.flipY = false;

  return (
    <group dispose={null}>
      <mesh
        material={materials.w__venge}
        geometry={nodes.Object003.geometry}
        rotation={[-Math.PI / 2, Math.PI, 0]}
        scale={[0.03, 0.03, 0.03]}
        castShadow
        receiveShadow
        material-color={legColor} >
        <meshPhongMaterial
          attach="material"
          map={ltexture}
        />
      </mesh>
      <group rotation={[-Math.PI / 2, Math.PI, 0]}>
        <mesh
          material={materials.w__venge}
          geometry={nodes.Chair_03_0.geometry}
          scale={[0.03, 0.03, 0.03]}
          castShadow
          receiveShadow
          material-color={legColor} >
          <meshPhongMaterial
            attach="material"
            map={ltexture}
          />
        </mesh>
        <mesh
          material={materials.chrome08_210}
          geometry={nodes.Chair_03_1.geometry}
          scale={[0.03, 0.03, 0.03]}
          castShadow
          receiveShadow
          material-color={legColor} >
          <meshPhongMaterial
            attach="material"
            map={ltexture}
          />
        </mesh>
      </group>
      <mesh
        material={materials.Material__110}
        geometry={nodes.Object001.geometry}
        rotation={[-Math.PI / 2, Math.PI, 0]}
        scale={[0.03, 0.03, 0.03]}
        castShadow
        receiveShadow
        material-color={cushionColor} >
        <meshPhongMaterial
          attach="material"
          map={ctexture}
        />
      </mesh>
      <mesh
        material={materials.Material__110}
        geometry={nodes.Object002.geometry}
        rotation={[-Math.PI / 2, Math.PI, 0]}
        scale={[0.03, 0.03, 0.03]}
        castShadow
        receiveShadow
        material-color={cushionColor} >
        <meshPhongMaterial
          attach="material"
          map={ctexture}
        />
      </mesh>
    </group>
  );
};

export default Chair;
